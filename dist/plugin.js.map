{"version":3,"file":"plugin.js","sources":["esm/definitions.js","esm/index.js","esm/web.js"],"sourcesContent":["//import { Capacitor } from '@capacitor/core';\r\n/**\r\n * SQLiteConnection Class\r\n */\r\nexport class SQLiteConnection {\r\n    constructor(sqlite) {\r\n        this.sqlite = sqlite;\r\n        this._connectionDict = new Map();\r\n    }\r\n    async initWebStore() {\r\n        try {\r\n            await this.sqlite.initWebStore();\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async saveToStore(database) {\r\n        try {\r\n            await this.sqlite.saveToStore({ database });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async saveToLocalDisk(database) {\r\n        try {\r\n            await this.sqlite.saveToLocalDisk({ database });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getFromLocalDiskToStore(overwrite) {\r\n        const mOverwrite = overwrite != null ? overwrite : true;\r\n        try {\r\n            await this.sqlite.getFromLocalDiskToStore({ overwrite: mOverwrite });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async echo(value) {\r\n        try {\r\n            const res = await this.sqlite.echo({ value });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isSecretStored() {\r\n        try {\r\n            const res = await this.sqlite.isSecretStored();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async setEncryptionSecret(passphrase) {\r\n        try {\r\n            await this.sqlite.setEncryptionSecret({ passphrase: passphrase });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async changeEncryptionSecret(passphrase, oldpassphrase) {\r\n        try {\r\n            await this.sqlite.changeEncryptionSecret({\r\n                passphrase: passphrase,\r\n                oldpassphrase: oldpassphrase,\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async clearEncryptionSecret() {\r\n        try {\r\n            await this.sqlite.clearEncryptionSecret();\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async checkEncryptionSecret(passphrase) {\r\n        try {\r\n            const res = await this.sqlite.checkEncryptionSecret({\r\n                passphrase: passphrase,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async addUpgradeStatement(database, toVersion, statements) {\r\n        const upgrade = {\r\n            toVersion,\r\n            statements,\r\n        };\r\n        try {\r\n            if (database.endsWith('.db'))\r\n                database = database.slice(0, -3);\r\n            await this.sqlite.addUpgradeStatement({\r\n                database,\r\n                upgrade: [upgrade],\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async createConnection(database, encrypted, mode, version, readonly) {\r\n        try {\r\n            if (database.endsWith('.db'))\r\n                database = database.slice(0, -3);\r\n            await this.sqlite.createConnection({\r\n                database,\r\n                encrypted,\r\n                mode,\r\n                version,\r\n                readonly,\r\n            });\r\n            const conn = new SQLiteDBConnection(database, readonly, this.sqlite);\r\n            const connName = readonly ? `RO_${database}` : `RW_${database}`;\r\n            this._connectionDict.set(connName, conn);\r\n            return Promise.resolve(conn);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async closeConnection(database, readonly) {\r\n        try {\r\n            if (database.endsWith('.db'))\r\n                database = database.slice(0, -3);\r\n            await this.sqlite.closeConnection({ database, readonly });\r\n            const connName = readonly ? `RO_${database}` : `RW_${database}`;\r\n            this._connectionDict.delete(connName);\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isConnection(database, readonly) {\r\n        const res = {};\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        const connName = readonly ? `RO_${database}` : `RW_${database}`;\r\n        res.result = this._connectionDict.has(connName);\r\n        return Promise.resolve(res);\r\n    }\r\n    async retrieveConnection(database, readonly) {\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        const connName = readonly ? `RO_${database}` : `RW_${database}`;\r\n        if (this._connectionDict.has(connName)) {\r\n            const conn = this._connectionDict.get(connName);\r\n            if (typeof conn != 'undefined')\r\n                return Promise.resolve(conn);\r\n            else {\r\n                return Promise.reject(`Connection ${database} is undefined`);\r\n            }\r\n        }\r\n        else {\r\n            return Promise.reject(`Connection ${database} does not exist`);\r\n        }\r\n    }\r\n    async getNCDatabasePath(path, database) {\r\n        try {\r\n            const databasePath = await this.sqlite.getNCDatabasePath({\r\n                path,\r\n                database,\r\n            });\r\n            return Promise.resolve(databasePath);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async createNCConnection(databasePath, version) {\r\n        try {\r\n            await this.sqlite.createNCConnection({\r\n                databasePath,\r\n                version,\r\n            });\r\n            const conn = new SQLiteDBConnection(databasePath, true, this.sqlite);\r\n            const connName = `RO_${databasePath})`;\r\n            this._connectionDict.set(connName, conn);\r\n            return Promise.resolve(conn);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async closeNCConnection(databasePath) {\r\n        try {\r\n            await this.sqlite.closeNCConnection({ databasePath });\r\n            const connName = `RO_${databasePath})`;\r\n            this._connectionDict.delete(connName);\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isNCConnection(databasePath) {\r\n        const res = {};\r\n        const connName = `RO_${databasePath})`;\r\n        res.result = this._connectionDict.has(connName);\r\n        return Promise.resolve(res);\r\n    }\r\n    async retrieveNCConnection(databasePath) {\r\n        if (this._connectionDict.has(databasePath)) {\r\n            const connName = `RO_${databasePath})`;\r\n            const conn = this._connectionDict.get(connName);\r\n            if (typeof conn != 'undefined')\r\n                return Promise.resolve(conn);\r\n            else {\r\n                return Promise.reject(`Connection ${databasePath} is undefined`);\r\n            }\r\n        }\r\n        else {\r\n            return Promise.reject(`Connection ${databasePath} does not exist`);\r\n        }\r\n    }\r\n    async isNCDatabase(databasePath) {\r\n        try {\r\n            const res = await this.sqlite.isNCDatabase({ databasePath });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async retrieveAllConnections() {\r\n        return this._connectionDict;\r\n    }\r\n    async closeAllConnections() {\r\n        const delDict = new Map();\r\n        try {\r\n            for (const key of this._connectionDict.keys()) {\r\n                const database = key.substring(3);\r\n                const readonly = key.substring(0, 3) === 'RO_' ? true : false;\r\n                await this.sqlite.closeConnection({ database, readonly });\r\n                delDict.set(key, null);\r\n            }\r\n            for (const key of delDict.keys()) {\r\n                this._connectionDict.delete(key);\r\n            }\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async checkConnectionsConsistency() {\r\n        try {\r\n            const keys = [...this._connectionDict.keys()];\r\n            const openModes = [];\r\n            const dbNames = [];\r\n            for (const key of keys) {\r\n                openModes.push(key.substring(0, 2));\r\n                dbNames.push(key.substring(3));\r\n            }\r\n            const res = await this.sqlite.checkConnectionsConsistency({\r\n                dbNames: dbNames,\r\n                openModes: openModes,\r\n            });\r\n            if (!res.result)\r\n                this._connectionDict = new Map();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            this._connectionDict = new Map();\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async importFromJson(jsonstring) {\r\n        try {\r\n            const ret = await this.sqlite.importFromJson({ jsonstring: jsonstring });\r\n            return Promise.resolve(ret);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isJsonValid(jsonstring) {\r\n        try {\r\n            const ret = await this.sqlite.isJsonValid({ jsonstring: jsonstring });\r\n            return Promise.resolve(ret);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async copyFromAssets(overwrite) {\r\n        const mOverwrite = overwrite != null ? overwrite : true;\r\n        try {\r\n            await this.sqlite.copyFromAssets({ overwrite: mOverwrite });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getFromHTTPRequest(url, overwrite) {\r\n        const mOverwrite = overwrite != null ? overwrite : true;\r\n        try {\r\n            await this.sqlite.getFromHTTPRequest({ url, overwrite: mOverwrite });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isDatabaseEncrypted(database) {\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        try {\r\n            const res = await this.sqlite.isDatabaseEncrypted({ database: database });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isInConfigEncryption() {\r\n        try {\r\n            const res = await this.sqlite.isInConfigEncryption();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isInConfigBiometricAuth() {\r\n        try {\r\n            const res = await this.sqlite.isInConfigBiometricAuth();\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isDatabase(database) {\r\n        if (database.endsWith('.db'))\r\n            database = database.slice(0, -3);\r\n        try {\r\n            const res = await this.sqlite.isDatabase({ database: database });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getDatabaseList() {\r\n        try {\r\n            const res = await this.sqlite.getDatabaseList();\r\n            const values = res.values;\r\n            values.sort();\r\n            const ret = { values: values };\r\n            return Promise.resolve(ret);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getMigratableDbList(folderPath) {\r\n        if (!folderPath || folderPath.length === 0) {\r\n            return Promise.reject('You must provide a folder path');\r\n        }\r\n        try {\r\n            const res = await this.sqlite.getMigratableDbList({\r\n                folderPath: folderPath,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async addSQLiteSuffix(folderPath, dbNameList) {\r\n        const path = folderPath ? folderPath : 'default';\r\n        const dbList = dbNameList ? dbNameList : [];\r\n        try {\r\n            const res = await this.sqlite.addSQLiteSuffix({\r\n                folderPath: path,\r\n                dbNameList: dbList,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async deleteOldDatabases(folderPath, dbNameList) {\r\n        const path = folderPath ? folderPath : 'default';\r\n        const dbList = dbNameList ? dbNameList : [];\r\n        try {\r\n            const res = await this.sqlite.deleteOldDatabases({\r\n                folderPath: path,\r\n                dbNameList: dbList,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async moveDatabasesAndAddSuffix(folderPath, dbNameList) {\r\n        const path = folderPath ? folderPath : 'default';\r\n        const dbList = dbNameList ? dbNameList : [];\r\n        return this.sqlite.moveDatabasesAndAddSuffix({\r\n            folderPath: path,\r\n            dbNameList: dbList,\r\n        });\r\n    }\r\n}\r\n/**\r\n * SQLiteDBConnection Class\r\n */\r\nexport class SQLiteDBConnection {\r\n    constructor(dbName, readonly, sqlite) {\r\n        this.dbName = dbName;\r\n        this.readonly = readonly;\r\n        this.sqlite = sqlite;\r\n    }\r\n    getConnectionDBName() {\r\n        return this.dbName;\r\n    }\r\n    getConnectionReadOnly() {\r\n        return this.readonly;\r\n    }\r\n    async open() {\r\n        try {\r\n            await this.sqlite.open({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async close() {\r\n        try {\r\n            await this.sqlite.close({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async loadExtension(path) {\r\n        try {\r\n            console.log(`database: ${this.dbName}`);\r\n            console.log(`readonly: ${this.readonly}}`);\r\n            console.log(`path: ${path}}`);\r\n            await this.sqlite.loadExtension({\r\n                database: this.dbName,\r\n                path: path,\r\n                readonly: this.readonly,\r\n            });\r\n            console.log(`loadExtension successful`);\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            console.log(`loadExtension failed `);\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async enableLoadExtension(toggle) {\r\n        try {\r\n            console.log(`database: ${this.dbName}`);\r\n            console.log(`readonly: ${this.readonly}`);\r\n            console.log(`toggle: ${toggle}`);\r\n            await this.sqlite.enableLoadExtension({\r\n                database: this.dbName,\r\n                toggle: toggle,\r\n                readonly: this.readonly,\r\n            });\r\n            console.log(`enableLoadExtension successful`);\r\n            return Promise.resolve();\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            console.log(`enableLoadExtension failed `);\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getUrl() {\r\n        try {\r\n            const res = await this.sqlite.getUrl({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getVersion() {\r\n        try {\r\n            const version = await this.sqlite.getVersion({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(version);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getTableList() {\r\n        try {\r\n            const res = await this.sqlite.getTableList({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async execute(statements, transaction = true) {\r\n        try {\r\n            if (!this.readonly) {\r\n                const res = await this.sqlite.execute({\r\n                    database: this.dbName,\r\n                    statements: statements,\r\n                    transaction: transaction,\r\n                    readonly: false,\r\n                });\r\n                return Promise.resolve(res);\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async query(statement, values) {\r\n        let res;\r\n        try {\r\n            if (values && values.length > 0) {\r\n                res = await this.sqlite.query({\r\n                    database: this.dbName,\r\n                    statement: statement,\r\n                    values: values,\r\n                    readonly: this.readonly,\r\n                });\r\n            }\r\n            else {\r\n                res = await this.sqlite.query({\r\n                    database: this.dbName,\r\n                    statement: statement,\r\n                    values: [],\r\n                    readonly: this.readonly,\r\n                });\r\n            }\r\n            // reorder rows for ios\r\n            res = await this.reorderRows(res);\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async run(statement, values, transaction = true, returnMode = 'no') {\r\n        let res;\r\n        try {\r\n            if (!this.readonly) {\r\n                if (values && values.length > 0) {\r\n                    const mRetMode = statement.toUpperCase().includes('RETURNING')\r\n                        ? returnMode\r\n                        : 'no';\r\n                    res = await this.sqlite.run({\r\n                        database: this.dbName,\r\n                        statement: statement,\r\n                        values: values,\r\n                        transaction: transaction,\r\n                        readonly: false,\r\n                        returnMode: mRetMode,\r\n                    });\r\n                    //        }\r\n                }\r\n                else {\r\n                    const mRetMode = statement.toUpperCase().includes('RETURNING')\r\n                        ? returnMode\r\n                        : 'no';\r\n                    res = await this.sqlite.run({\r\n                        database: this.dbName,\r\n                        statement: statement,\r\n                        values: [],\r\n                        transaction: transaction,\r\n                        readonly: false,\r\n                        returnMode: mRetMode,\r\n                    });\r\n                }\r\n                // reorder rows for ios\r\n                res.changes = await this.reorderRows(res.changes);\r\n                return Promise.resolve(res);\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async executeSet(set, transaction = true, returnMode = 'no') {\r\n        let res;\r\n        try {\r\n            if (!this.readonly) {\r\n                res = await this.sqlite.executeSet({\r\n                    database: this.dbName,\r\n                    set: set,\r\n                    transaction: transaction,\r\n                    readonly: false,\r\n                    returnMode: returnMode,\r\n                });\r\n                //      }\r\n                // reorder rows for ios\r\n                res.changes = await this.reorderRows(res.changes);\r\n                return Promise.resolve(res);\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isExists() {\r\n        try {\r\n            const res = await this.sqlite.isDBExists({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isTable(table) {\r\n        try {\r\n            const res = await this.sqlite.isTableExists({\r\n                database: this.dbName,\r\n                table: table,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async isDBOpen() {\r\n        try {\r\n            const res = await this.sqlite.isDBOpen({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async delete() {\r\n        try {\r\n            if (!this.readonly) {\r\n                await this.sqlite.deleteDatabase({\r\n                    database: this.dbName,\r\n                    readonly: false,\r\n                });\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async createSyncTable() {\r\n        try {\r\n            if (!this.readonly) {\r\n                const res = await this.sqlite.createSyncTable({\r\n                    database: this.dbName,\r\n                    readonly: false,\r\n                });\r\n                return Promise.resolve(res);\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async setSyncDate(syncdate) {\r\n        try {\r\n            if (!this.readonly) {\r\n                await this.sqlite.setSyncDate({\r\n                    database: this.dbName,\r\n                    syncdate: syncdate,\r\n                    readonly: false,\r\n                });\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async getSyncDate() {\r\n        try {\r\n            const res = await this.sqlite.getSyncDate({\r\n                database: this.dbName,\r\n                readonly: this.readonly,\r\n            });\r\n            let retDate = '';\r\n            if (res.syncDate > 0)\r\n                retDate = new Date(res.syncDate * 1000).toISOString();\r\n            return Promise.resolve(retDate);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async exportToJson(mode) {\r\n        try {\r\n            const res = await this.sqlite.exportToJson({\r\n                database: this.dbName,\r\n                jsonexportmode: mode,\r\n                readonly: this.readonly,\r\n            });\r\n            return Promise.resolve(res);\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async deleteExportedRows() {\r\n        try {\r\n            if (!this.readonly) {\r\n                await this.sqlite.deleteExportedRows({\r\n                    database: this.dbName,\r\n                    readonly: false,\r\n                });\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async executeTransaction(txn) {\r\n        try {\r\n            if (!this.readonly) {\r\n                const ret = await this.sqlite.execute({\r\n                    database: this.dbName,\r\n                    statements: 'BEGIN TRANSACTION;',\r\n                    transaction: false,\r\n                });\r\n                if (ret.changes.changes < 0) {\r\n                    return Promise.reject('Error in BEGIN TRANSACTION');\r\n                }\r\n                for (const task of txn) {\r\n                    if (task.values && task.values.length > 0) {\r\n                        const retMode = task.statement.toUpperCase().includes('RETURNING')\r\n                            ? 'all'\r\n                            : 'no';\r\n                        const ret = await this.sqlite.run({\r\n                            database: this.dbName,\r\n                            statement: task.statement,\r\n                            values: task.values,\r\n                            transaction: false,\r\n                            readonly: false,\r\n                            returnMode: retMode,\r\n                        });\r\n                        if (ret.changes.lastId === -1) {\r\n                            await this.execute('ROLLBACK;', false);\r\n                            return Promise.reject('Error in transaction run ');\r\n                        }\r\n                    }\r\n                    else {\r\n                        const ret = await this.sqlite.execute({\r\n                            database: this.dbName,\r\n                            statements: task.statement,\r\n                            transaction: false,\r\n                            readonly: false,\r\n                        });\r\n                        if (ret.changes.changes < 0) {\r\n                            await this.sqlite.execute({\r\n                                database: this.dbName,\r\n                                statements: 'ROLLBACK;',\r\n                                transaction: false,\r\n                                readonly: false,\r\n                            });\r\n                            return Promise.reject('Error in transaction execute ');\r\n                        }\r\n                    }\r\n                }\r\n                await this.sqlite.execute({\r\n                    database: this.dbName,\r\n                    statements: 'COMMIT;',\r\n                    transaction: false,\r\n                    readonly: false,\r\n                });\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                return Promise.reject('not allowed in read-only mode');\r\n            }\r\n        }\r\n        catch (err) {\r\n            await this.sqlite.execute({\r\n                database: this.dbName,\r\n                statements: 'ROLLBACK;',\r\n                transaction: false,\r\n                readonly: false,\r\n            });\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async reorderRows(res) {\r\n        const retRes = res;\r\n        if (res?.values && typeof res.values[0] === 'object') {\r\n            if (Object.keys(res.values[0]).includes('ios_columns')) {\r\n                const columnList = res.values[0]['ios_columns'];\r\n                const iosRes = [];\r\n                for (let i = 1; i < res.values.length; i++) {\r\n                    const rowJson = res.values[i];\r\n                    const resRowJson = {};\r\n                    for (const item of columnList) {\r\n                        resRowJson[item] = rowJson[item];\r\n                    }\r\n                    iosRes.push(resRowJson);\r\n                }\r\n                retRes['values'] = iosRes;\r\n            }\r\n        }\r\n        return Promise.resolve(retRes);\r\n    }\r\n}\r\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\r\nconst CapacitorSQLite = registerPlugin('CapacitorSQLite', {\r\n    web: () => import('./web').then(m => new m.CapacitorSQLiteWeb()),\r\n    electron: () => window.CapacitorCustomPlatform.plugins.CapacitorSQLite,\r\n});\r\nexport { CapacitorSQLite };\r\nexport * from './definitions';\r\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\r\nexport class CapacitorSQLiteWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.jeepSqliteElement = null;\r\n        this.isWebStoreOpen = false;\r\n    }\r\n    async initWebStore() {\r\n        await customElements.whenDefined('jeep-sqlite');\r\n        this.jeepSqliteElement = document.querySelector('jeep-sqlite');\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.jeepSqliteElement.addEventListener('jeepSqliteImportProgress', (event) => {\r\n            this.notifyListeners('sqliteImportProgressEvent', event.detail);\r\n        });\r\n        this.jeepSqliteElement.addEventListener('jeepSqliteExportProgress', (event) => {\r\n            this.notifyListeners('sqliteExportProgressEvent', event.detail);\r\n        });\r\n        this.jeepSqliteElement.addEventListener('jeepSqliteHTTPRequestEnded', (event) => {\r\n            this.notifyListeners('sqliteHTTPRequestEndedEvent', event.detail);\r\n        });\r\n        this.jeepSqliteElement.addEventListener('jeepSqlitePickDatabaseEnded', (event) => {\r\n            this.notifyListeners('sqlitePickDatabaseEndedEvent', event.detail);\r\n        });\r\n        this.jeepSqliteElement.addEventListener('jeepSqliteSaveDatabaseToDisk', (event) => {\r\n            this.notifyListeners('sqliteSaveDatabaseToDiskEvent', event.detail);\r\n        });\r\n        if (!this.isWebStoreOpen) {\r\n            this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\r\n        }\r\n        return;\r\n    }\r\n    async saveToStore(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.saveToStore(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async getFromLocalDiskToStore(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.getFromLocalDiskToStore(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async saveToLocalDisk(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.saveToLocalDisk(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async echo(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        const echoResult = await this.jeepSqliteElement.echo(options);\r\n        return echoResult;\r\n    }\r\n    async createConnection(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.createConnection(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async open(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.open(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async closeConnection(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.closeConnection(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async getVersion(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const versionResult = await this.jeepSqliteElement.getVersion(options);\r\n            return versionResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async checkConnectionsConsistency(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        try {\r\n            const consistencyResult = await this.jeepSqliteElement.checkConnectionsConsistency(options);\r\n            return consistencyResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async close(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.close(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async getTableList(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const tableListResult = await this.jeepSqliteElement.getTableList(options);\r\n            return tableListResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async execute(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const executeResult = await this.jeepSqliteElement.execute(options);\r\n            return executeResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async executeSet(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const executeResult = await this.jeepSqliteElement.executeSet(options);\r\n            return executeResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async run(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const runResult = await this.jeepSqliteElement.run(options);\r\n            return runResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async query(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const queryResult = await this.jeepSqliteElement.query(options);\r\n            return queryResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async isDBExists(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const dbExistsResult = await this.jeepSqliteElement.isDBExists(options);\r\n            return dbExistsResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async isDBOpen(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const isDBOpenResult = await this.jeepSqliteElement.isDBOpen(options);\r\n            return isDBOpenResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async isDatabase(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const isDatabaseResult = await this.jeepSqliteElement.isDatabase(options);\r\n            return isDatabaseResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async isTableExists(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const tableExistsResult = await this.jeepSqliteElement.isTableExists(options);\r\n            return tableExistsResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async deleteDatabase(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.deleteDatabase(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async isJsonValid(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const isJsonValidResult = await this.jeepSqliteElement.isJsonValid(options);\r\n            return isJsonValidResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async importFromJson(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const importFromJsonResult = await this.jeepSqliteElement.importFromJson(options);\r\n            return importFromJsonResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async exportToJson(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const exportToJsonResult = await this.jeepSqliteElement.exportToJson(options);\r\n            return exportToJsonResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async createSyncTable(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const createSyncTableResult = await this.jeepSqliteElement.createSyncTable(options);\r\n            return createSyncTableResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async setSyncDate(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.setSyncDate(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async getSyncDate(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const getSyncDateResult = await this.jeepSqliteElement.getSyncDate(options);\r\n            return getSyncDateResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async deleteExportedRows(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.deleteExportedRows(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async addUpgradeStatement(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.addUpgradeStatement(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async copyFromAssets(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.copyFromAssets(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async getFromHTTPRequest(options) {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            await this.jeepSqliteElement.getFromHTTPRequest(options);\r\n            return;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    async getDatabaseList() {\r\n        this.ensureJeepSqliteIsAvailable();\r\n        this.ensureWebstoreIsOpen();\r\n        try {\r\n            const databaseListResult = await this.jeepSqliteElement.getDatabaseList();\r\n            return databaseListResult;\r\n        }\r\n        catch (err) {\r\n            throw new Error(`${err}`);\r\n        }\r\n    }\r\n    /**\r\n     * Checks if the `jeep-sqlite` element is present in the DOM.\r\n     * If it's not in the DOM, this method throws an Error.\r\n     *\r\n     * Attention: This will always fail, if the `intWebStore()` method wasn't called before.\r\n     */\r\n    ensureJeepSqliteIsAvailable() {\r\n        if (this.jeepSqliteElement === null) {\r\n            throw new Error(`The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.`);\r\n        }\r\n    }\r\n    ensureWebstoreIsOpen() {\r\n        if (!this.isWebStoreOpen) {\r\n            /**\r\n             * if (!this.isWebStoreOpen)\r\n              this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\r\n             */\r\n            throw new Error('WebStore is not open yet. You have to call \"initWebStore()\" first.');\r\n        }\r\n    }\r\n    ////////////////////////////////////\r\n    ////// UNIMPLEMENTED METHODS\r\n    ////////////////////////////////////\r\n    async getUrl() {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async getMigratableDbList(options) {\r\n        console.log('getMigratableDbList', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async addSQLiteSuffix(options) {\r\n        console.log('addSQLiteSuffix', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async deleteOldDatabases(options) {\r\n        console.log('deleteOldDatabases', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async moveDatabasesAndAddSuffix(options) {\r\n        console.log('moveDatabasesAndAddSuffix', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async isSecretStored() {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async setEncryptionSecret(options) {\r\n        console.log('setEncryptionSecret', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async changeEncryptionSecret(options) {\r\n        console.log('changeEncryptionSecret', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async clearEncryptionSecret() {\r\n        console.log('clearEncryptionSecret');\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async checkEncryptionSecret(options) {\r\n        console.log('checkEncryptionPassPhrase', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async getNCDatabasePath(options) {\r\n        console.log('getNCDatabasePath', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async createNCConnection(options) {\r\n        console.log('createNCConnection', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async closeNCConnection(options) {\r\n        console.log('closeNCConnection', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async isNCDatabase(options) {\r\n        console.log('isNCDatabase', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async isDatabaseEncrypted(options) {\r\n        console.log('isDatabaseEncrypted', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async isInConfigEncryption() {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async isInConfigBiometricAuth() {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async loadExtension(options) {\r\n        console.log('loadExtension', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n    async enableLoadExtension(options) {\r\n        console.log('enableLoadExtension', options);\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":"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"}